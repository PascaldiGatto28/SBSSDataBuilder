<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Levaro.SBSoftball</name>
  </assembly>
  <members>
    <member name="T:Levaro.SBSoftball.LeagueDescription">
      <summary>
            Encapsulates meta-information about a league which is encapsulated in the <see cref="T:Levaro.SBSoftball.LeagueSchedule" /> class when it's
            constructed.
            </summary>
      <remarks>
            When a <see cref="T:Levaro.SBSoftball.LeagueSchedule" /> is created by the static method 
            <see cref="M:Levaro.SBSoftball.LeagueSchedule.ConstructLeagueSchedule(System.String)" /> a description of the league including the league schedule
            page is also constructed. This class is often used for reporting purposes. Instances are only constructed via the
            static method or JSON deserialization.
            <para>
            Because the default constructor is private and all property setters are "private init", instance of this class are
            essentially immutable and typically can only be created using the static
            <see cref="M:Levaro.SBSoftball.LeagueDescription.ConstructionLeagueDescription(System.Uri,HtmlAgilityPack.HtmlDocument)" /> method.
            </para></remarks>
    </member>
    <member name="M:Levaro.SBSoftball.LeagueDescription.#ctor">
      <summary>
            Creates an "empty" instance. 
            </summary>
    </member>
    <member name="P:Levaro.SBSoftball.LeagueDescription.LeagueCategory">
      <summary>
            Returns and initializes the league category.
            </summary>
      <remarks>
            The league categories are one of "Recreation", "SideWinder", "Coyote", "Community" or "Competitive".
            </remarks>
    </member>
    <member name="P:Levaro.SBSoftball.LeagueDescription.LeagueDay">
      <summary>
            Returns and initializes the league day, which is Monday through Friday.
            </summary>
    </member>
    <member name="P:Levaro.SBSoftball.LeagueDescription.Season">
      <summary>
            Returns and initializes the season, which is Spring, Summer, Fall and Winter.
            </summary>
    </member>
    <member name="P:Levaro.SBSoftball.LeagueDescription.Year">
      <summary>
            Returns and initializes the year the league games started, for example 2023.
            </summary>
    </member>
    <member name="P:Levaro.SBSoftball.LeagueDescription.ScheduleDataSource">
      <summary>
            Returns and initializes the <see cref="T:System.Uri" /> of the page containing all league schedule information.
            </summary>
    </member>
    <member name="M:Levaro.SBSoftball.LeagueDescription.ConstructionLeagueDescription(System.Uri,HtmlAgilityPack.HtmlDocument)">
      <summary>
            Constructs a <c>LeagueDescription</c> object. This method is the only way to create an instance of the
            <see cref="T:Levaro.SBSoftball.LeagueDescription" /> class.
            </summary>
      <remarks>
            Generally there is no reason to call this method directly, because the static
            <see cref="M:Levaro.SBSoftball.LeagueSchedule.ConstructLeagueSchedule(System.String)" /> method calls it when creating a 
            <see cref="T:Levaro.SBSoftball.LeagueSchedule" /> instance and stores the instance in its <see cref="P:Levaro.SBSoftball.LeagueSchedule.LeagueDescription" />
            property.
            </remarks>
      <param name="scheduleDataSource">The <see cref="T:System.Uri" /> to the page containing the data to build the instance. The
            value should be value of the <see cref="P:Levaro.SBSoftball.LeagueLocations.Locations" /> dictionary property.</param>
      <param name="htmlDocument">The <see cref="T:HtmlAgilityPack.HtmlDocument" /> returned by the 
            <see cref="M:Levaro.SBSoftball.PageContentUtilities.GetPageHtmlDocument(System.Uri)" />.
            </param>
      <returns>
      </returns>
      <exception cref="T:System.InvalidOperationException">
            if the page recovered from specified <paramref name="scheduleDataSource" /> cannot be parsed to provide the 
            class data.
            </exception>
      <seealso cref="T:Levaro.SBSoftball.LeagueSchedule" />
      <seealso cref="M:Levaro.SBSoftball.PageContentUtilities.GetPageHtmlDocument(System.Uri)" />
    </member>
    <member name="M:Levaro.SBSoftball.LeagueDescription.ToString">
      <summary>
            Overrides the default method.
            </summary>
      <returns>Returns a description string containing the values of <c>string</c> properties. For example,
            "Monday Recreation Fall 2023"</returns>
    </member>
    <member name="T:Levaro.SBSoftball.LeagueLocations">
      <summary>
            Encapsulates the page URLs that have the league schedule information.
            </summary>
    </member>
    <member name="M:Levaro.SBSoftball.LeagueLocations.#ctor">
      <summary>
            The private default construction that initializes the two properties to their default values.
            </summary>
      <remarks>
            Instances can only be created using the <see cref="M:Levaro.SBSoftball.LeagueLocations.ConstructLeagueLocations(System.String)" /> static method because
            the only constructor is private and property setters are <c>init</c>. This class is immutable and because the data 
            does not change during the league play, it needs only be constructed once if persisted.
            </remarks>
    </member>
    <member name="P:Levaro.SBSoftball.LeagueLocations.BuildDate">
      <summary>
            Gets and initializes the time stamp the instance was created. The default constructs initializes this to
            <c>DateTime.MinValue</c>, the <see cref="M:Levaro.SBSoftball.LeagueLocations.ConstructLeagueLocations(System.String)" /> sets the value to current date and
            time the instance is created.
            </summary>
    </member>
    <member name="P:Levaro.SBSoftball.LeagueLocations.Locations">
      <summary>
            Gets and initializes the dictionary of league name and URL values (strings) of the pages that contain the complete
            league schedule for the league.
            </summary>
      <remarks>
            This property is initialized to the empty dictionary by the default constructed, but dictionary is populated when
            the <see cref="M:Levaro.SBSoftball.LeagueLocations.ConstructLeagueLocations(System.String)" /> static method successfully returns.
            </remarks>
    </member>
    <member name="M:Levaro.SBSoftball.LeagueLocations.ConstructLeagueLocations(System.String)">
      <summary>
            Creates <see cref="T:Levaro.SBSoftball.LeagueLocations" /> instance using the <paramref name="saddleBrookeSeniorSoftball" /> property to
            scrape the page for the information.
            </summary>
      <param name="saddleBrookeSeniorSoftball">The optional value that specifies the URL where the league schedules
            can be found. If not specified, <c>https://saddlebrookesoftball.com/</c> is used.
            </param>
      <returns>The created <c>LeagueLocations</c> instance or if the page cannot be found or parsed the instance
            created by the default constructor unless an exception is thrown. <c>null</c> is never returned.</returns>
      <exception cref="T:System.InvalidOperationException">
            If the page having the URL (string) <paramref name="saddleBrookeSeniorSoftball" /> could not be parsed (scraped) to
            recover the league schedule page URLs.
            </exception>
    </member>
    <member name="T:Levaro.SBSoftball.LeagueSchedule">
      <summary>
            Encapsulates all information about the scheduled games for a specific league whether the games have been played 
            (completed) or to be played in the future.
            </summary>
      <remarks>
            Instances should only be constructed using the static method <see cref="M:Levaro.SBSoftball.LeagueSchedule.ConstructLeagueSchedule(System.String)" /> where
            the league name (key) is obtained from the <see cref="T:Levaro.SBSoftball.LeagueLocations" /> instance. 
            <see cref="P:Levaro.SBSoftball.LeaguesData.LeagueSchedules" /> property is a sequence of <c>LeagueSchedule</c> objects
            and are the essential information of the data store.
            <para>
            Because the default constructor is private and all property setters or "private init", instance of this class are
            essentially immutable.
            </para></remarks>
      <seealso cref="T:Levaro.SBSoftball.LeaguesData" />
    </member>
    <member name="M:Levaro.SBSoftball.LeagueSchedule.#ctor">
      <summary>
            The private default constructor that initializes all properties to default values so that properties need not be
            set to <c>nullable</c>.
            </summary>
    </member>
    <member name="P:Levaro.SBSoftball.LeagueSchedule.IsEmpty">
      <summary>
            Gets or initializes the <c>IsEmpty</c> property. 
            </summary>
      <remarks>
            The default constructor initializes the value to <c>true</c> and is only set
            to <c>false</c> when <see cref="M:Levaro.SBSoftball.LeagueSchedule.ConstructLeagueSchedule(System.String)" /> successfully returns an instance.
            </remarks>
    </member>
    <member name="P:Levaro.SBSoftball.LeagueSchedule.LeagueDescription">
      <summary>
            Gets or initializes the <c>LeagueDescription</c> property.
            </summary>
      <remarks>
            The default constructor initializes the value to the default instance, but then its <c>LeagueDescription</c>
            properties are initialized by the <see cref="M:Levaro.SBSoftball.LeagueSchedule.ConstructLeagueSchedule(System.String)" /> method.
            </remarks>
    </member>
    <member name="P:Levaro.SBSoftball.LeagueSchedule.ScheduledGames">
      <summary>
            Gets and initializes the <c>ScheduledGames</c> property.
            </summary>
      <remarks>
            This property is to <c>LeagueSchedule</c> what the property <see cref="P:Levaro.SBSoftball.LeaguesData.LeagueSchedules" /> is to the
            <see cref="T:Levaro.SBSoftball.LeaguesData" /> class. A league schedule is just a sequence of scheduled games and all the detailed
            data resides with the <see cref="T:Levaro.SBSoftball.ScheduledGame" /> instances.
            </remarks>
    </member>
    <member name="M:Levaro.SBSoftball.LeagueSchedule.ConstructLeagueSchedule(System.String)">
      <summary>
            Given a league schedule location, a <c>LeagueSchedule</c> instance is created.
            </summary>
      <param name="leagueScheduleLocation">
            The location of a league is the string representation of a <see cref="T:System.Uri" /> to a page having links to all the
            scheduled games. For example <c>https://saddlebrookesoftball.com/calendar/monday-recreation-schedule/</c> is the link
            to the schedule for the Monday Recreation league.
            </param>
      <remarks>
            Short of using reflection, this is the only way to create an instance of a <c>LeagueSchedule</c> class. From the
            page recovered using the <paramref name="leagueScheduleLocation" /> property, the contents are scraped to initialize
            the <see cref="P:Levaro.SBSoftball.LeagueSchedule.LeagueDescription" /> property, and follow on the schedule game links on the page to
            build the <see cref="P:Levaro.SBSoftball.LeagueSchedule.ScheduledGames" /> property.
            </remarks>
      <returns>
            A <c>LeagueSchedule</c> instance. If <paramref name="leagueScheduleLocation" /> is <c>null</c> or empty, the empty
            <c>LeagueSchedule</c> instance (that is, <see cref="P:Levaro.SBSoftball.LeagueSchedule.IsEmpty" /> is <c>true</c>) is returned. <c>null</c> is never
            returned.
            </returns>
    </member>
    <member name="T:Levaro.SBSoftball.LeaguesData">
      <summary>
            This class is the main class for the SBSS data store. 
            </summary>
      <remarks>
            The sequence of <see cref="T:Levaro.SBSoftball.LeagueSchedule" /> objects contains all
            information for scheduled (completed or not) games for that league. The data are returned from the HTML page whose address 
            is provided via a <see cref="T:Levaro.SBSoftball.LeagueLocations" /> instance. To produce the full data store, iterate over the locations 
            (really Urls) to recover a page where the scheduled games for that league can be scraped from the page. The static method 
            <see cref="M:Levaro.SBSoftball.LeagueSchedule.ConstructLeagueSchedule(System.String)" /> returns the schedule for that league 
            and can be added to the <see cref="P:Levaro.SBSoftball.LeaguesData.LeagueSchedules" /> property of this instance.
            <para>For example, the <see cref="T:Levaro.SBSoftball.LeaguesData" /> instance is created and then serialized to JSON file.
            <code language="c#" title="Sample Code to Populate the LeagueSchedule Sequence"><![CDATA[
            LeagueLocations leagues = LeagueLocations.ConstructLeagueLocations();
            List<LeagueSchedule> schedules = new(); // Now create the sequence of LeagueSchedule objects
            foreach (KeyValuePair<string, string> kvp in leagues.Locations)
            {
                LeagueSchedule schedule = LeagueSchedule.ConstructLeagueSchedule(kvp.Value);
                schedules.Add(schedule);
            }
            ]]></code></para></remarks>
    </member>
    <member name="M:Levaro.SBSoftball.LeaguesData.#ctor">
      <summary>
            Creates an "empty" instance of this class, that is, the <paramref cref="P:Levaro.SBSoftball.LeaguesData.LeagueSchedules" /> is the empty
            sequence.
            </summary>
      <remarks>
            Because this constructor is private, generally the only way to create an instance is using the static
            <see cref="M:Levaro.SBSoftball.LeaguesData.ConstructLeaguesData(System.String,System.Action{System.String})" /> method or via deserialization. 
            That's in fact what a builder application does. It only constructs the data store once and then updates the 
            schedule games as the games are completed.
            </remarks>
    </member>
    <member name="P:Levaro.SBSoftball.LeaguesData.BuildDate">
      <summary>
            Gets and sets the time stamp when the instance is constructed or updated, typically when the 
            <see cref="P:Levaro.SBSoftball.LeaguesData.LeagueSchedules" /> sequence is constructed or the elements updated.
            </summary>
    </member>
    <member name="P:Levaro.SBSoftball.LeaguesData.LeagueSchedules">
      <summary>
            Get and initializes the sequences of game schedules for each league. 
            </summary>
      <remarks>
            Use the  <see cref="M:Levaro.SBSoftball.LeagueSchedule.ConstructLeagueSchedule(System.String)" /> method to build the sequence. The sequence
            can be altered only during initialization, but the elements of the sequence can be (and are) modified when additional
            game data are available
            </remarks>
    </member>
    <member name="M:Levaro.SBSoftball.LeaguesData.ConstructLeaguesData(System.String,System.Action{System.String})">
      <summary>
            Constructs an instance of this class which is the data store for all information about the SaddleBrooke senior
            softball games.
            </summary>
      <param name="saddleBrookeSeniorSoftball">The optional value that specifies the URL where the league schedules
            and scheduled games can be found. If not specified, <c>https://saddlebrookesoftball.com/</c> is used.
            </param>
      <param name="message">
            A delegate that can be used by the calling code to receive notifications during the construction process. 
            </param>
      <returns>
      </returns>
      <exception cref="T:System.InvalidOperationException">If any error occurs that prevents the data store to be built. The
            most common error occurs if code that extracts the information from the web site pages is not valid. 
            </exception>
    </member>
    <member name="N:Levaro.SBSoftball">
      <summary>
            These are the namespace comments for <c>Levaro.Softball</c>.
            </summary>
    </member>
    <member name="M:Levaro.SBSoftball.ScheduledGame.IsRecorded(System.Nullable{System.Int32})">
      <summary>
            Indicates whether the game has been played and recorded by the SBSS supervisor.
            </summary>
      <remarks>
            The assumption is that the information is available web site no later <paramref name="checkHours" />
            less the hour of game start hours. At that point, if there is no team data, it is assumed that is cancelled 
            and not played.
            </remarks>
      <param name="checkHours">the number of hours from the beginning of the day. The parameter is option, and if
            <c>null</c>, the value of <see cref="P:Levaro.SBSoftball.ScheduledGame.CheckHours" /> is used.</param>
      <returns>
        <c>true</c> if it has been determine number of hours after the start of the game.</returns>
      <seealso cref="M:Levaro.SBSoftball.LeagueSchedule.ConstructLeagueSchedule(System.String)" />
    </member>
  </members>
</doc>