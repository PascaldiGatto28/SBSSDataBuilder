<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Extensions Class</title><meta name="Title" content="Extensions" /><meta name="Help.Id" content="T:Levaro.SBSoftball.Common.Extensions" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Levaro.SBSoftball.Common" /><meta name="guid" content="7d740286-c1e5-c510-fb21-be0bd3030fa7" /><meta name="Description" content="Extensions used by the Levaro.Softball API that supports the construction of SBSSDataBuilder application." /><meta name="tocFile" content="../toc/IDD.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">SBSS Data Builder API Documentation</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Extensions Class</h1><div class="summary">
            Extensions used by the <span class="code">Levaro.Softball</span> API that supports the construction of SBSSDataBuilder application.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="28d24ae4-a5b8-fd18-7d1d-59f552bc2ec5.htm">Levaro.SBSoftball.Common</a><br /><strong>Assembly:</strong> Levaro.SBSoftball.Common (in Levaro.SBSoftball.Common.dll) Version: 1.0.0<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">Extensions</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">Extensions</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDAEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="fffbdde6-dd78-5896-8b0b-bcd82aa38c4a.htm">AppendTextToFileName</a></td><td>
            Appends text to the end of a file name (and before the extension).
            </td></tr><tr><td><a href="b0812bfb-11ab-4538-1085-fe7237c59980.htm">AppendTimeStampToFileName</a></td><td>
            Appends the current data and time at the end of the file name of a full file path.
            </td></tr><tr><td><a href="b5701dfa-8238-b132-82be-ac68c22d6730.htm">ByteArrayToString</a></td><td>
            Converts a byte array to a UTF8 string.
            </td></tr><tr><td><a href="d512fbe6-a45d-1cba-aff9-7d18a6c517bf.htm">Capitalize</a></td><td>
            The first character of the string is changed to upper case.
            </td></tr><tr><td><a href="bcc6fec4-56e8-c57f-49aa-0f17c1feac39.htm">CleanNameText</a></td><td>Decodes HTML encoded characters (for example &lt; to &lt;) and removes all leading text beginning with zero or more white 
            space characters followed by alphanumeric characters surrounded by parenthesis. Also all leading and trailing white 
            space is removed. This rather specialized method is used to "normalize" names recovered from data scraped 
            from HTML pages.
            <a href="c1b457f2-8458-162e-ec89-033f50d0a300.htm">RemoveParenthicalText<span id="LST2C2C45B_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td></tr><tr><td><a href="6032d9a7-62e7-e5e6-9127-9575debc79e2.htm">Deserialize<span id="LST2C2C45B_1" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST2C2C45B_2" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Deserializes and object from the contents of a specified file path.
            </td></tr><tr><td><a href="e37dae5e-da8c-6dfb-9108-88b822346805.htm">FormatJsonString</a></td><td>
            Formats a JSON string using the <span class="code">JsonTextWriter</span> used in <a href="cb250217-ea05-078d-2343-ceb14f2ae048.htm">ToJsonString(Object)</a>.
            </td></tr><tr><td><a href="9696255b-e768-1c11-dc1d-707a0cb96a87.htm">FormatResourceName</a></td><td>
            Formats a common resource name (as in Visual Studio) into a formatted name that can be found when recovering
            the resource from the assembly.
            </td></tr><tr><td><a href="f7bd8ad0-987c-42fb-5b36-5818701819f7.htm">FromJsonString<span id="LST2C2C45B_3" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST2C2C45B_4" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Deserializes a sequence of objects from a JSON string.
            </td></tr><tr><td><a href="65a510e2-883b-3f16-f61a-b888869589d0.htm">GetAttribute<span id="LST2C2C45B_5" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST2C2C45B_6" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns the value of a custom attribute for the <span class="parameter">assembly</span>.
            </td></tr><tr><td><a href="362e453c-b000-de66-0308-7a033fd8382b.htm">GetEmbeddedResourceAsBytes</a></td><td>
            Reads the embedded resource and returns it as an array of bytes.
            </td></tr><tr><td><a href="cb6edb03-6a56-6e81-0be5-fd39cb10214b.htm">GetFullVersion</a></td><td>
            Extension method that returns the assembly version and build data as string formatted using the specified
            format string.
            </td></tr><tr><td><a href="2feff90f-d859-1b29-5325-0efa5ea763e0.htm">GetStatistics</a></td><td>
            Constructs a <span class="code">DescriptiveStataistics</span> object for the specified sequence of <span class="code">double</span> items.
            </td></tr><tr><td><a href="6f841637-f26e-c41f-9a9c-3d90965d8ff7.htm">ImageNameToWords</a></td><td>
            Converts the string to a sequence of words
            </td></tr><tr><td><a href="452a1858-7f5c-1081-01c1-9b036f772687.htm">NameToTitle</a></td><td>
            Converts a string to words and then creates a string with each separated by a single space.
            </td></tr><tr><td><a href="3461f76c-e866-b391-6197-dadb4ce8bb2b.htm">NoWhiteSpaceRegex</a></td><td> </td></tr><tr><td><a href="998f892e-682c-e79e-a4e5-807f8289327b.htm">ParseInt</a></td><td>
            Parses a string to an <span class="code">int</span>.
            </td></tr><tr><td><a href="c1b457f2-8458-162e-ec89-033f50d0a300.htm">RemoveParenthicalText</a></td><td> </td></tr><tr><td><a href="903d7c70-5695-6acb-d982-a92d2b7f4976.htm">RemoveWhiteSpace</a></td><td>
            Returns the <span class="parameter">content</span> string with all white space removed using the source generated Regex
            <a href="3461f76c-e866-b391-6197-dadb4ce8bb2b.htm">NoWhiteSpaceRegex<span id="LST2C2C45B_7" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>.
            </td></tr><tr><td><a href="a28ea696-5d57-5994-bf51-6646456d6145.htm">Serialize<span id="LST2C2C45B_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST2C2C45B_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Serializes the object as JSON text to the file who path <span class="parameter">destFilePath</span> is specified. T
            </td></tr><tr><td><a href="afa30e6e-5707-9d5a-a4a4-1c47cda54789.htm">Substring(String, String, Boolean)</a></td><td>
            Returns a substring beginning at specified text (the <span class="parameter">start</span>) until the end of the 
            <span class="parameter">content</span>.
            </td></tr><tr><td><a href="d1b60c7f-0d2b-3a42-d054-4a460971e866.htm">Substring(String, String, String, Boolean, Boolean)</a></td><td>
            Returns a substring starting from the <span class="parameter">start</span> string parameter and ending at the <span class="parameter">end</span>
            parameter.
            </td></tr><tr><td><a href="cb250217-ea05-078d-2343-ceb14f2ae048.htm">ToJsonString</a></td><td>
            Serializes an object to a JSON string.
            </td></tr><tr><td><a href="61d41a6b-d82a-14fd-18b3-684e7c8965d6.htm">ToString<span id="LST2C2C45B_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST2C2C45B_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Stack<span id="LST2C2C45B_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST2C2C45B_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Converts a stack of objects of type <span class="parameter">T</span> to a string where each element of the sequence
            is converted to a string using its <span class="code">ToString()</span> method and contenated using a carriage return/line feed
            string.
            </td></tr><tr><td><a href="372ef1e7-8744-84a0-1b47-8f348005b17e.htm">ToString<span id="LST2C2C45B_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST2C2C45B_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST2C2C45B_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST2C2C45B_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Converts an sequence of objects of type <span class="parameter">T</span> to a string where each element of the sequence
            is converted to a string using its <span class="code">ToString()</span> method and contenated using the 
            <span class="parameter">itemSeparator</span> string.
            </td></tr><tr><td><a href="f67ce577-4759-9878-bc07-65ac8077a9b5.htm">ToString<span id="LST2C2C45B_18" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST2C2C45B_19" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IEnumerable<span id="LST2C2C45B_20" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST2C2C45B_21" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Func<span id="LST2C2C45B_22" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T, String<span id="LST2C2C45B_23" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, String)</a></td><td>
            Converts an sequence of objects of type <span class="parameter">T</span> to a string where each element of the sequence
            is converted to a string and contenated using the <span class="parameter">itemSeparator</span> string.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="28d24ae4-a5b8-fd18-7d1d-59f552bc2ec5.htm">Levaro.SBSoftball.Common Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>